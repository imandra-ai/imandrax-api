# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: simple_api.proto
# Protobuf Python Version: 5.27.2
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    27,
    2,
    '',
    'simple_api.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import error_pb2 as error__pb2
import utils_pb2 as utils__pb2
import session_pb2 as session__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x10simple_api.proto\x12\x08imandrax\x1a\x0b\x65rror.proto\x1a\x0butils.proto\x1a\rsession.proto\"\xb4\x01\n\x0c\x44\x65\x63omposeReq\x12\x19\n\x07session\x18\x01 \x01(\x0b\x32\x08.Session\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x15\n\x08\x61ssuming\x18\x03 \x01(\tH\x00\x88\x01\x01\x12\r\n\x05prune\x18\x04 \x01(\x08\x12\x17\n\nmax_rounds\x18\n \x01(\x05H\x01\x88\x01\x01\x12\x14\n\x07stop_at\x18\x0b \x01(\x05H\x02\x88\x01\x01\x42\x0b\n\t_assumingB\r\n\x0b_max_roundsB\n\n\x08_stop_at\"c\n\x0f\x44\x65\x63omposeRegion\x12\x16\n\x0e\x63onstraints_pp\x18\x01 \x03(\t\x12\x14\n\x0cinvariant_pp\x18\x02 \x01(\t\x12\x15\n\x08\x61st_json\x18\x03 \x01(\tH\x00\x88\x01\x01\x42\x0b\n\t_ast_json\":\n\x0c\x44\x65\x63omposeRes\x12*\n\x07regions\x18\x01 \x03(\x0b\x32\x19.imandrax.DecomposeRegion\"4\n\nEvalSrcReq\x12\x19\n\x07session\x18\x01 \x01(\x0b\x32\x08.Session\x12\x0b\n\x03src\x18\x02 \x01(\t\"D\n\x07\x45valRes\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x10\n\x08messages\x18\x02 \x03(\t\x12\x16\n\x06\x65rrors\x18\x03 \x03(\x0b\x32\x06.Error\"k\n\x0cVerifySrcReq\x12\x19\n\x07session\x18\x01 \x01(\x0b\x32\x08.Session\x12\x0b\n\x03src\x18\x02 \x01(\t\x12#\n\x05hints\x18\n \x01(\x0b\x32\x0f.imandrax.HintsH\x00\x88\x01\x01\x42\x08\n\x06_hintsJ\x04\x08\x0b\x10\x0c\"m\n\rVerifyNameReq\x12\x19\n\x07session\x18\x01 \x01(\x0b\x32\x08.Session\x12\x0c\n\x04name\x18\x02 \x01(\t\x12#\n\x05hints\x18\n \x01(\x0b\x32\x0f.imandrax.HintsH\x00\x88\x01\x01\x42\x08\n\x06_hintsJ\x04\x08\x0b\x10\x0c\"m\n\x0eInstanceSrcReq\x12\x19\n\x07session\x18\x01 \x01(\x0b\x32\x08.Session\x12\x0b\n\x03src\x18\x02 \x01(\t\x12#\n\x05hints\x18\n \x01(\x0b\x32\x0f.imandrax.HintsH\x00\x88\x01\x01\x42\x08\n\x06_hintsJ\x04\x08\x0b\x10\x0c\"o\n\x0fInstanceNameReq\x12\x19\n\x07session\x18\x01 \x01(\x0b\x32\x08.Session\x12\x0c\n\x04name\x18\x02 \x01(\t\x12#\n\x05hints\x18\n \x01(\x0b\x32\x0f.imandrax.HintsH\x00\x88\x01\x01\x42\x08\n\x06_hintsJ\x04\x08\x0b\x10\x0c\",\n\x06Proved\x12\x15\n\x08proof_pp\x18\x01 \x01(\tH\x00\x88\x01\x01\x42\x0b\n\t_proof_pp\"+\n\x05Unsat\x12\x15\n\x08proof_pp\x18\x01 \x01(\tH\x00\x88\x01\x01\x42\x0b\n\t_proof_pp\"9\n\x05Model\x12#\n\x06m_type\x18\x01 \x01(\x0e\x32\x13.imandrax.ModelType\x12\x0b\n\x03src\x18\x02 \x01(\t\"8\n\x07Refuted\x12#\n\x05model\x18\x01 \x01(\x0b\x32\x0f.imandrax.ModelH\x00\x88\x01\x01\x42\x08\n\x06_model\"4\n\x03Sat\x12#\n\x05model\x18\x01 \x01(\x0b\x32\x0f.imandrax.ModelH\x00\x88\x01\x01\x42\x08\n\x06_model\"\x92\x01\n\tVerifyRes\x12\x1d\n\x07unknown\x18\x01 \x01(\x0b\x32\n.StringMsgH\x00\x12\x15\n\x03\x65rr\x18\x02 \x01(\x0b\x32\x06.ErrorH\x00\x12\"\n\x06proved\x18\x03 \x01(\x0b\x32\x10.imandrax.ProvedH\x00\x12$\n\x07refuted\x18\x04 \x01(\x0b\x32\x11.imandrax.RefutedH\x00\x42\x05\n\x03res\"\x8a\x01\n\x0bInstanceRes\x12\x1d\n\x07unknown\x18\x01 \x01(\x0b\x32\n.StringMsgH\x00\x12\x15\n\x03\x65rr\x18\x02 \x01(\x0b\x32\x06.ErrorH\x00\x12 \n\x05unsat\x18\x03 \x01(\x0b\x32\x0f.imandrax.UnsatH\x00\x12\x1c\n\x03sat\x18\x04 \x01(\x0b\x32\r.imandrax.SatH\x00\x42\x05\n\x03res\"\x9e\x04\n\x05Hints\x12\x16\n\x04\x61uto\x18\x01 \x01(\x0b\x32\x06.EmptyH\x00\x12(\n\x06unroll\x18\x02 \x01(\x0b\x32\x16.imandrax.Hints.UnrollH\x00\x12(\n\x06induct\x18\x03 \x01(\x0b\x32\x16.imandrax.Hints.InductH\x00\x1a\xc5\x02\n\x06Induct\x12\x19\n\x07\x64\x65\x66\x61ult\x18\x01 \x01(\x0b\x32\x06.EmptyH\x00\x12\x37\n\nfunctional\x18\x02 \x01(\x0b\x32!.imandrax.Hints.Induct.FunctionalH\x00\x12\x37\n\nstructural\x18\x03 \x01(\x0b\x32!.imandrax.Hints.Induct.StructuralH\x00\x1a\x1c\n\nFunctional\x12\x0e\n\x06\x66_name\x18\x01 \x01(\t\x1aQ\n\nStructural\x12\x35\n\x05style\x18\x01 \x01(\x0e\x32&.imandrax.Hints.Induct.StructuralStyle\x12\x0c\n\x04vars\x18\x02 \x03(\t\"3\n\x0fStructuralStyle\x12\x0c\n\x08\x41\x64\x64itive\x10\x00\x12\x12\n\x0eMultiplicative\x10\x01\x42\x08\n\x06induct\x1aV\n\x06Unroll\x12\x17\n\nsmt_solver\x18\n \x01(\tH\x00\x88\x01\x01\x12\x16\n\tmax_steps\x18\x0b \x01(\x05H\x01\x88\x01\x01\x42\r\n\x0b_smt_solverB\x0c\n\n_max_stepsB\t\n\x07method_*.\n\tModelType\x12\x13\n\x0f\x43ounter_example\x10\x00\x12\x0c\n\x08Instance\x10\x01\x32\xb0\x03\n\x06Simple\x12\x1c\n\x06status\x12\x06.Empty\x1a\n.StringMsg\x12\x1a\n\x08shutdown\x12\x06.Empty\x1a\x06.Empty\x12;\n\tdecompose\x12\x16.imandrax.DecomposeReq\x1a\x16.imandrax.DecomposeRes\x12\x33\n\x08\x65val_src\x12\x14.imandrax.EvalSrcReq\x1a\x11.imandrax.EvalRes\x12\x39\n\nverify_src\x12\x16.imandrax.VerifySrcReq\x1a\x13.imandrax.VerifyRes\x12;\n\x0bverify_name\x12\x17.imandrax.VerifyNameReq\x1a\x13.imandrax.VerifyRes\x12?\n\x0cinstance_src\x12\x18.imandrax.InstanceSrcReq\x1a\x15.imandrax.InstanceRes\x12\x41\n\rinstance_name\x12\x19.imandrax.InstanceNameReq\x1a\x15.imandrax.InstanceResb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'simple_api_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_MODELTYPE']._serialized_start=2080
  _globals['_MODELTYPE']._serialized_end=2126
  _globals['_DECOMPOSEREQ']._serialized_start=72
  _globals['_DECOMPOSEREQ']._serialized_end=252
  _globals['_DECOMPOSEREGION']._serialized_start=254
  _globals['_DECOMPOSEREGION']._serialized_end=353
  _globals['_DECOMPOSERES']._serialized_start=355
  _globals['_DECOMPOSERES']._serialized_end=413
  _globals['_EVALSRCREQ']._serialized_start=415
  _globals['_EVALSRCREQ']._serialized_end=467
  _globals['_EVALRES']._serialized_start=469
  _globals['_EVALRES']._serialized_end=537
  _globals['_VERIFYSRCREQ']._serialized_start=539
  _globals['_VERIFYSRCREQ']._serialized_end=646
  _globals['_VERIFYNAMEREQ']._serialized_start=648
  _globals['_VERIFYNAMEREQ']._serialized_end=757
  _globals['_INSTANCESRCREQ']._serialized_start=759
  _globals['_INSTANCESRCREQ']._serialized_end=868
  _globals['_INSTANCENAMEREQ']._serialized_start=870
  _globals['_INSTANCENAMEREQ']._serialized_end=981
  _globals['_PROVED']._serialized_start=983
  _globals['_PROVED']._serialized_end=1027
  _globals['_UNSAT']._serialized_start=1029
  _globals['_UNSAT']._serialized_end=1072
  _globals['_MODEL']._serialized_start=1074
  _globals['_MODEL']._serialized_end=1131
  _globals['_REFUTED']._serialized_start=1133
  _globals['_REFUTED']._serialized_end=1189
  _globals['_SAT']._serialized_start=1191
  _globals['_SAT']._serialized_end=1243
  _globals['_VERIFYRES']._serialized_start=1246
  _globals['_VERIFYRES']._serialized_end=1392
  _globals['_INSTANCERES']._serialized_start=1395
  _globals['_INSTANCERES']._serialized_end=1533
  _globals['_HINTS']._serialized_start=1536
  _globals['_HINTS']._serialized_end=2078
  _globals['_HINTS_INDUCT']._serialized_start=1654
  _globals['_HINTS_INDUCT']._serialized_end=1979
  _globals['_HINTS_INDUCT_FUNCTIONAL']._serialized_start=1805
  _globals['_HINTS_INDUCT_FUNCTIONAL']._serialized_end=1833
  _globals['_HINTS_INDUCT_STRUCTURAL']._serialized_start=1835
  _globals['_HINTS_INDUCT_STRUCTURAL']._serialized_end=1916
  _globals['_HINTS_INDUCT_STRUCTURALSTYLE']._serialized_start=1918
  _globals['_HINTS_INDUCT_STRUCTURALSTYLE']._serialized_end=1969
  _globals['_HINTS_UNROLL']._serialized_start=1981
  _globals['_HINTS_UNROLL']._serialized_end=2067
  _globals['_SIMPLE']._serialized_start=2129
  _globals['_SIMPLE']._serialized_end=2561
# @@protoc_insertion_point(module_scope)
