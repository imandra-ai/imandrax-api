# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: simple_api.proto

from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import error_pb2 as error__pb2
import utils_pb2 as utils__pb2
import session_pb2 as session__pb2
import artmsg_pb2 as artmsg__pb2
import task_pb2 as task__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='simple_api.proto',
  package='imandrax.simple',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x10simple_api.proto\x12\x0fimandrax.simple\x1a\x0b\x65rror.proto\x1a\x0butils.proto\x1a\rsession.proto\x1a\x0c\x61rtmsg.proto\x1a\ntask.proto\"\'\n\x10SessionCreateReq\x12\x13\n\x0b\x61pi_version\x18\x01 \x01(\t\"\x8a\x01\n\x0c\x44\x65\x63omposeReq\x12*\n\x07session\x18\x01 \x01(\x0b\x32\x19.imandrax.session.Session\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x15\n\x08\x61ssuming\x18\x03 \x01(\tH\x00\x88\x01\x01\x12\r\n\x05\x62\x61sis\x18\x04 \x03(\t\x12\r\n\x05prune\x18\x05 \x01(\x08\x42\x0b\n\t_assuming\"s\n\x0c\x44\x65\x63omposeRes\x12\x18\n\x08\x61rtifact\x18\x01 \x01(\x0b\x32\x04.ArtH\x00\x12\x15\n\x03\x65rr\x18\x02 \x01(\x0b\x32\x06.EmptyH\x00\x12\x16\n\x06\x65rrors\x18\n \x03(\x0b\x32\x06.Error\x12\x13\n\x04task\x18\x0b \x01(\x0b\x32\x05.TaskB\x05\n\x03res\"E\n\nEvalSrcReq\x12*\n\x07session\x18\x01 \x01(\x0b\x32\x19.imandrax.session.Session\x12\x0b\n\x03src\x18\x02 \x01(\t\"Z\n\x07\x45valRes\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x10\n\x08messages\x18\x02 \x03(\t\x12\x16\n\x06\x65rrors\x18\x03 \x03(\x0b\x32\x06.Error\x12\x14\n\x05tasks\x18\x04 \x03(\x0b\x32\x05.Task\"\x83\x01\n\x0cVerifySrcReq\x12*\n\x07session\x18\x01 \x01(\x0b\x32\x19.imandrax.session.Session\x12\x0b\n\x03src\x18\x02 \x01(\t\x12*\n\x05hints\x18\n \x01(\x0b\x32\x16.imandrax.simple.HintsH\x00\x88\x01\x01\x42\x08\n\x06_hintsJ\x04\x08\x0b\x10\x0c\"\x85\x01\n\rVerifyNameReq\x12*\n\x07session\x18\x01 \x01(\x0b\x32\x19.imandrax.session.Session\x12\x0c\n\x04name\x18\x02 \x01(\t\x12*\n\x05hints\x18\n \x01(\x0b\x32\x16.imandrax.simple.HintsH\x00\x88\x01\x01\x42\x08\n\x06_hintsJ\x04\x08\x0b\x10\x0c\"\x85\x01\n\x0eInstanceSrcReq\x12*\n\x07session\x18\x01 \x01(\x0b\x32\x19.imandrax.session.Session\x12\x0b\n\x03src\x18\x02 \x01(\t\x12*\n\x05hints\x18\n \x01(\x0b\x32\x16.imandrax.simple.HintsH\x00\x88\x01\x01\x42\x08\n\x06_hintsJ\x04\x08\x0b\x10\x0c\"\x87\x01\n\x0fInstanceNameReq\x12*\n\x07session\x18\x01 \x01(\x0b\x32\x19.imandrax.session.Session\x12\x0c\n\x04name\x18\x02 \x01(\t\x12*\n\x05hints\x18\n \x01(\x0b\x32\x16.imandrax.simple.HintsH\x00\x88\x01\x01\x42\x08\n\x06_hintsJ\x04\x08\x0b\x10\x0c\",\n\x06Proved\x12\x15\n\x08proof_pp\x18\x01 \x01(\tH\x00\x88\x01\x01\x42\x0b\n\t_proof_pp\"+\n\x05Unsat\x12\x15\n\x08proof_pp\x18\x01 \x01(\tH\x00\x88\x01\x01\x42\x0b\n\t_proof_pp\"j\n\x05Model\x12*\n\x06m_type\x18\x01 \x01(\x0e\x32\x1a.imandrax.simple.ModelType\x12\x0b\n\x03src\x18\x02 \x01(\t\x12\x1b\n\x08\x61rtifact\x18\x03 \x01(\x0b\x32\x04.ArtH\x00\x88\x01\x01\x42\x0b\n\t_artifact\"?\n\x07Refuted\x12*\n\x05model\x18\x01 \x01(\x0b\x32\x16.imandrax.simple.ModelH\x00\x88\x01\x01\x42\x08\n\x06_model\";\n\x03Sat\x12*\n\x05model\x18\x01 \x01(\x0b\x32\x16.imandrax.simple.ModelH\x00\x88\x01\x01\x42\x08\n\x06_model\"\xcd\x01\n\tVerifyRes\x12\x1d\n\x07unknown\x18\x01 \x01(\x0b\x32\n.StringMsgH\x00\x12\x15\n\x03\x65rr\x18\x02 \x01(\x0b\x32\x06.EmptyH\x00\x12)\n\x06proved\x18\x03 \x01(\x0b\x32\x17.imandrax.simple.ProvedH\x00\x12+\n\x07refuted\x18\x04 \x01(\x0b\x32\x18.imandrax.simple.RefutedH\x00\x12\x16\n\x06\x65rrors\x18\n \x03(\x0b\x32\x06.Error\x12\x13\n\x04task\x18\x0b \x01(\x0b\x32\x05.TaskB\x05\n\x03res\"\xc5\x01\n\x0bInstanceRes\x12\x1d\n\x07unknown\x18\x01 \x01(\x0b\x32\n.StringMsgH\x00\x12\x15\n\x03\x65rr\x18\x02 \x01(\x0b\x32\x06.EmptyH\x00\x12\'\n\x05unsat\x18\x03 \x01(\x0b\x32\x16.imandrax.simple.UnsatH\x00\x12#\n\x03sat\x18\x04 \x01(\x0b\x32\x14.imandrax.simple.SatH\x00\x12\x16\n\x06\x65rrors\x18\n \x03(\x0b\x32\x06.Error\x12\x13\n\x04task\x18\x0b \x01(\x0b\x32\x05.TaskB\x05\n\x03res\"\xc1\x04\n\x05Hints\x12\x16\n\x04\x61uto\x18\x01 \x01(\x0b\x32\x06.EmptyH\x00\x12/\n\x06unroll\x18\x02 \x01(\x0b\x32\x1d.imandrax.simple.Hints.UnrollH\x00\x12/\n\x06induct\x18\x03 \x01(\x0b\x32\x1d.imandrax.simple.Hints.InductH\x00\x1a\xda\x02\n\x06Induct\x12\x19\n\x07\x64\x65\x66\x61ult\x18\x01 \x01(\x0b\x32\x06.EmptyH\x00\x12>\n\nfunctional\x18\x02 \x01(\x0b\x32(.imandrax.simple.Hints.Induct.FunctionalH\x00\x12>\n\nstructural\x18\x03 \x01(\x0b\x32(.imandrax.simple.Hints.Induct.StructuralH\x00\x1a\x1c\n\nFunctional\x12\x0e\n\x06\x66_name\x18\x01 \x01(\t\x1aX\n\nStructural\x12<\n\x05style\x18\x01 \x01(\x0e\x32-.imandrax.simple.Hints.Induct.StructuralStyle\x12\x0c\n\x04vars\x18\x02 \x03(\t\"3\n\x0fStructuralStyle\x12\x0c\n\x08\x41\x64\x64itive\x10\x00\x12\x12\n\x0eMultiplicative\x10\x01\x42\x08\n\x06induct\x1aV\n\x06Unroll\x12\x17\n\nsmt_solver\x18\n \x01(\tH\x00\x88\x01\x01\x12\x16\n\tmax_steps\x18\x0b \x01(\x05H\x01\x88\x01\x01\x42\r\n\x0b_smt_solverB\x0c\n\n_max_stepsB\t\n\x07method_*.\n\tModelType\x12\x13\n\x0f\x43ounter_example\x10\x00\x12\x0c\n\x08Instance\x10\x01\x32\xd4\x04\n\x06Simple\x12\x1c\n\x06status\x12\x06.Empty\x1a\n.StringMsg\x12\x1a\n\x08shutdown\x12\x06.Empty\x1a\x06.Empty\x12I\n\tdecompose\x12\x1d.imandrax.simple.DecomposeReq\x1a\x1d.imandrax.simple.DecomposeRes\x12N\n\x0e\x63reate_session\x12!.imandrax.simple.SessionCreateReq\x1a\x19.imandrax.session.Session\x12\x41\n\x08\x65val_src\x12\x1b.imandrax.simple.EvalSrcReq\x1a\x18.imandrax.simple.EvalRes\x12G\n\nverify_src\x12\x1d.imandrax.simple.VerifySrcReq\x1a\x1a.imandrax.simple.VerifyRes\x12I\n\x0bverify_name\x12\x1e.imandrax.simple.VerifyNameReq\x1a\x1a.imandrax.simple.VerifyRes\x12M\n\x0cinstance_src\x12\x1f.imandrax.simple.InstanceSrcReq\x1a\x1c.imandrax.simple.InstanceRes\x12O\n\rinstance_name\x12 .imandrax.simple.InstanceNameReq\x1a\x1c.imandrax.simple.InstanceResb\x06proto3'
  ,
  dependencies=[error__pb2.DESCRIPTOR,utils__pb2.DESCRIPTOR,session__pb2.DESCRIPTOR,artmsg__pb2.DESCRIPTOR,task__pb2.DESCRIPTOR,])

_MODELTYPE = _descriptor.EnumDescriptor(
  name='ModelType',
  full_name='imandrax.simple.ModelType',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='Counter_example', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='Instance', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2423,
  serialized_end=2469,
)
_sym_db.RegisterEnumDescriptor(_MODELTYPE)

ModelType = enum_type_wrapper.EnumTypeWrapper(_MODELTYPE)
Counter_example = 0
Instance = 1


_HINTS_INDUCT_STRUCTURALSTYLE = _descriptor.EnumDescriptor(
  name='StructuralStyle',
  full_name='imandrax.simple.Hints.Induct.StructuralStyle',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='Additive', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='Multiplicative', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2261,
  serialized_end=2312,
)
_sym_db.RegisterEnumDescriptor(_HINTS_INDUCT_STRUCTURALSTYLE)


_SESSIONCREATEREQ = _descriptor.Descriptor(
  name='SessionCreateReq',
  full_name='imandrax.simple.SessionCreateReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='api_version', full_name='imandrax.simple.SessionCreateReq.api_version', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=104,
  serialized_end=143,
)


_DECOMPOSEREQ = _descriptor.Descriptor(
  name='DecomposeReq',
  full_name='imandrax.simple.DecomposeReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='session', full_name='imandrax.simple.DecomposeReq.session', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='name', full_name='imandrax.simple.DecomposeReq.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='assuming', full_name='imandrax.simple.DecomposeReq.assuming', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='basis', full_name='imandrax.simple.DecomposeReq.basis', index=3,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='prune', full_name='imandrax.simple.DecomposeReq.prune', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_assuming', full_name='imandrax.simple.DecomposeReq._assuming',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=146,
  serialized_end=284,
)


_DECOMPOSERES = _descriptor.Descriptor(
  name='DecomposeRes',
  full_name='imandrax.simple.DecomposeRes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='artifact', full_name='imandrax.simple.DecomposeRes.artifact', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='err', full_name='imandrax.simple.DecomposeRes.err', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='errors', full_name='imandrax.simple.DecomposeRes.errors', index=2,
      number=10, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='task', full_name='imandrax.simple.DecomposeRes.task', index=3,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='res', full_name='imandrax.simple.DecomposeRes.res',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=286,
  serialized_end=401,
)


_EVALSRCREQ = _descriptor.Descriptor(
  name='EvalSrcReq',
  full_name='imandrax.simple.EvalSrcReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='session', full_name='imandrax.simple.EvalSrcReq.session', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='src', full_name='imandrax.simple.EvalSrcReq.src', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=403,
  serialized_end=472,
)


_EVALRES = _descriptor.Descriptor(
  name='EvalRes',
  full_name='imandrax.simple.EvalRes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='imandrax.simple.EvalRes.success', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='messages', full_name='imandrax.simple.EvalRes.messages', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='errors', full_name='imandrax.simple.EvalRes.errors', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='tasks', full_name='imandrax.simple.EvalRes.tasks', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=474,
  serialized_end=564,
)


_VERIFYSRCREQ = _descriptor.Descriptor(
  name='VerifySrcReq',
  full_name='imandrax.simple.VerifySrcReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='session', full_name='imandrax.simple.VerifySrcReq.session', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='src', full_name='imandrax.simple.VerifySrcReq.src', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='hints', full_name='imandrax.simple.VerifySrcReq.hints', index=2,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_hints', full_name='imandrax.simple.VerifySrcReq._hints',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=567,
  serialized_end=698,
)


_VERIFYNAMEREQ = _descriptor.Descriptor(
  name='VerifyNameReq',
  full_name='imandrax.simple.VerifyNameReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='session', full_name='imandrax.simple.VerifyNameReq.session', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='name', full_name='imandrax.simple.VerifyNameReq.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='hints', full_name='imandrax.simple.VerifyNameReq.hints', index=2,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_hints', full_name='imandrax.simple.VerifyNameReq._hints',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=701,
  serialized_end=834,
)


_INSTANCESRCREQ = _descriptor.Descriptor(
  name='InstanceSrcReq',
  full_name='imandrax.simple.InstanceSrcReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='session', full_name='imandrax.simple.InstanceSrcReq.session', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='src', full_name='imandrax.simple.InstanceSrcReq.src', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='hints', full_name='imandrax.simple.InstanceSrcReq.hints', index=2,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_hints', full_name='imandrax.simple.InstanceSrcReq._hints',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=837,
  serialized_end=970,
)


_INSTANCENAMEREQ = _descriptor.Descriptor(
  name='InstanceNameReq',
  full_name='imandrax.simple.InstanceNameReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='session', full_name='imandrax.simple.InstanceNameReq.session', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='name', full_name='imandrax.simple.InstanceNameReq.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='hints', full_name='imandrax.simple.InstanceNameReq.hints', index=2,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_hints', full_name='imandrax.simple.InstanceNameReq._hints',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=973,
  serialized_end=1108,
)


_PROVED = _descriptor.Descriptor(
  name='Proved',
  full_name='imandrax.simple.Proved',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='proof_pp', full_name='imandrax.simple.Proved.proof_pp', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_proof_pp', full_name='imandrax.simple.Proved._proof_pp',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1110,
  serialized_end=1154,
)


_UNSAT = _descriptor.Descriptor(
  name='Unsat',
  full_name='imandrax.simple.Unsat',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='proof_pp', full_name='imandrax.simple.Unsat.proof_pp', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_proof_pp', full_name='imandrax.simple.Unsat._proof_pp',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1156,
  serialized_end=1199,
)


_MODEL = _descriptor.Descriptor(
  name='Model',
  full_name='imandrax.simple.Model',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='m_type', full_name='imandrax.simple.Model.m_type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='src', full_name='imandrax.simple.Model.src', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='artifact', full_name='imandrax.simple.Model.artifact', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_artifact', full_name='imandrax.simple.Model._artifact',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1201,
  serialized_end=1307,
)


_REFUTED = _descriptor.Descriptor(
  name='Refuted',
  full_name='imandrax.simple.Refuted',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='model', full_name='imandrax.simple.Refuted.model', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_model', full_name='imandrax.simple.Refuted._model',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1309,
  serialized_end=1372,
)


_SAT = _descriptor.Descriptor(
  name='Sat',
  full_name='imandrax.simple.Sat',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='model', full_name='imandrax.simple.Sat.model', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_model', full_name='imandrax.simple.Sat._model',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1374,
  serialized_end=1433,
)


_VERIFYRES = _descriptor.Descriptor(
  name='VerifyRes',
  full_name='imandrax.simple.VerifyRes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='unknown', full_name='imandrax.simple.VerifyRes.unknown', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='err', full_name='imandrax.simple.VerifyRes.err', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='proved', full_name='imandrax.simple.VerifyRes.proved', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='refuted', full_name='imandrax.simple.VerifyRes.refuted', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='errors', full_name='imandrax.simple.VerifyRes.errors', index=4,
      number=10, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='task', full_name='imandrax.simple.VerifyRes.task', index=5,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='res', full_name='imandrax.simple.VerifyRes.res',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1436,
  serialized_end=1641,
)


_INSTANCERES = _descriptor.Descriptor(
  name='InstanceRes',
  full_name='imandrax.simple.InstanceRes',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='unknown', full_name='imandrax.simple.InstanceRes.unknown', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='err', full_name='imandrax.simple.InstanceRes.err', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='unsat', full_name='imandrax.simple.InstanceRes.unsat', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='sat', full_name='imandrax.simple.InstanceRes.sat', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='errors', full_name='imandrax.simple.InstanceRes.errors', index=4,
      number=10, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='task', full_name='imandrax.simple.InstanceRes.task', index=5,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='res', full_name='imandrax.simple.InstanceRes.res',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1644,
  serialized_end=1841,
)


_HINTS_INDUCT_FUNCTIONAL = _descriptor.Descriptor(
  name='Functional',
  full_name='imandrax.simple.Hints.Induct.Functional',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='f_name', full_name='imandrax.simple.Hints.Induct.Functional.f_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2141,
  serialized_end=2169,
)

_HINTS_INDUCT_STRUCTURAL = _descriptor.Descriptor(
  name='Structural',
  full_name='imandrax.simple.Hints.Induct.Structural',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='style', full_name='imandrax.simple.Hints.Induct.Structural.style', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='vars', full_name='imandrax.simple.Hints.Induct.Structural.vars', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2171,
  serialized_end=2259,
)

_HINTS_INDUCT = _descriptor.Descriptor(
  name='Induct',
  full_name='imandrax.simple.Hints.Induct',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='default', full_name='imandrax.simple.Hints.Induct.default', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='functional', full_name='imandrax.simple.Hints.Induct.functional', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='structural', full_name='imandrax.simple.Hints.Induct.structural', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_HINTS_INDUCT_FUNCTIONAL, _HINTS_INDUCT_STRUCTURAL, ],
  enum_types=[
    _HINTS_INDUCT_STRUCTURALSTYLE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='induct', full_name='imandrax.simple.Hints.Induct.induct',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1976,
  serialized_end=2322,
)

_HINTS_UNROLL = _descriptor.Descriptor(
  name='Unroll',
  full_name='imandrax.simple.Hints.Unroll',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='smt_solver', full_name='imandrax.simple.Hints.Unroll.smt_solver', index=0,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='max_steps', full_name='imandrax.simple.Hints.Unroll.max_steps', index=1,
      number=11, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='_smt_solver', full_name='imandrax.simple.Hints.Unroll._smt_solver',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
    _descriptor.OneofDescriptor(
      name='_max_steps', full_name='imandrax.simple.Hints.Unroll._max_steps',
      index=1, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=2324,
  serialized_end=2410,
)

_HINTS = _descriptor.Descriptor(
  name='Hints',
  full_name='imandrax.simple.Hints',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='auto', full_name='imandrax.simple.Hints.auto', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='unroll', full_name='imandrax.simple.Hints.unroll', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='induct', full_name='imandrax.simple.Hints.induct', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_HINTS_INDUCT, _HINTS_UNROLL, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='method_', full_name='imandrax.simple.Hints.method_',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1844,
  serialized_end=2421,
)

_DECOMPOSEREQ.fields_by_name['session'].message_type = session__pb2._SESSION
_DECOMPOSEREQ.oneofs_by_name['_assuming'].fields.append(
  _DECOMPOSEREQ.fields_by_name['assuming'])
_DECOMPOSEREQ.fields_by_name['assuming'].containing_oneof = _DECOMPOSEREQ.oneofs_by_name['_assuming']
_DECOMPOSERES.fields_by_name['artifact'].message_type = artmsg__pb2._ART
_DECOMPOSERES.fields_by_name['err'].message_type = utils__pb2._EMPTY
_DECOMPOSERES.fields_by_name['errors'].message_type = error__pb2._ERROR
_DECOMPOSERES.fields_by_name['task'].message_type = task__pb2._TASK
_DECOMPOSERES.oneofs_by_name['res'].fields.append(
  _DECOMPOSERES.fields_by_name['artifact'])
_DECOMPOSERES.fields_by_name['artifact'].containing_oneof = _DECOMPOSERES.oneofs_by_name['res']
_DECOMPOSERES.oneofs_by_name['res'].fields.append(
  _DECOMPOSERES.fields_by_name['err'])
_DECOMPOSERES.fields_by_name['err'].containing_oneof = _DECOMPOSERES.oneofs_by_name['res']
_EVALSRCREQ.fields_by_name['session'].message_type = session__pb2._SESSION
_EVALRES.fields_by_name['errors'].message_type = error__pb2._ERROR
_EVALRES.fields_by_name['tasks'].message_type = task__pb2._TASK
_VERIFYSRCREQ.fields_by_name['session'].message_type = session__pb2._SESSION
_VERIFYSRCREQ.fields_by_name['hints'].message_type = _HINTS
_VERIFYSRCREQ.oneofs_by_name['_hints'].fields.append(
  _VERIFYSRCREQ.fields_by_name['hints'])
_VERIFYSRCREQ.fields_by_name['hints'].containing_oneof = _VERIFYSRCREQ.oneofs_by_name['_hints']
_VERIFYNAMEREQ.fields_by_name['session'].message_type = session__pb2._SESSION
_VERIFYNAMEREQ.fields_by_name['hints'].message_type = _HINTS
_VERIFYNAMEREQ.oneofs_by_name['_hints'].fields.append(
  _VERIFYNAMEREQ.fields_by_name['hints'])
_VERIFYNAMEREQ.fields_by_name['hints'].containing_oneof = _VERIFYNAMEREQ.oneofs_by_name['_hints']
_INSTANCESRCREQ.fields_by_name['session'].message_type = session__pb2._SESSION
_INSTANCESRCREQ.fields_by_name['hints'].message_type = _HINTS
_INSTANCESRCREQ.oneofs_by_name['_hints'].fields.append(
  _INSTANCESRCREQ.fields_by_name['hints'])
_INSTANCESRCREQ.fields_by_name['hints'].containing_oneof = _INSTANCESRCREQ.oneofs_by_name['_hints']
_INSTANCENAMEREQ.fields_by_name['session'].message_type = session__pb2._SESSION
_INSTANCENAMEREQ.fields_by_name['hints'].message_type = _HINTS
_INSTANCENAMEREQ.oneofs_by_name['_hints'].fields.append(
  _INSTANCENAMEREQ.fields_by_name['hints'])
_INSTANCENAMEREQ.fields_by_name['hints'].containing_oneof = _INSTANCENAMEREQ.oneofs_by_name['_hints']
_PROVED.oneofs_by_name['_proof_pp'].fields.append(
  _PROVED.fields_by_name['proof_pp'])
_PROVED.fields_by_name['proof_pp'].containing_oneof = _PROVED.oneofs_by_name['_proof_pp']
_UNSAT.oneofs_by_name['_proof_pp'].fields.append(
  _UNSAT.fields_by_name['proof_pp'])
_UNSAT.fields_by_name['proof_pp'].containing_oneof = _UNSAT.oneofs_by_name['_proof_pp']
_MODEL.fields_by_name['m_type'].enum_type = _MODELTYPE
_MODEL.fields_by_name['artifact'].message_type = artmsg__pb2._ART
_MODEL.oneofs_by_name['_artifact'].fields.append(
  _MODEL.fields_by_name['artifact'])
_MODEL.fields_by_name['artifact'].containing_oneof = _MODEL.oneofs_by_name['_artifact']
_REFUTED.fields_by_name['model'].message_type = _MODEL
_REFUTED.oneofs_by_name['_model'].fields.append(
  _REFUTED.fields_by_name['model'])
_REFUTED.fields_by_name['model'].containing_oneof = _REFUTED.oneofs_by_name['_model']
_SAT.fields_by_name['model'].message_type = _MODEL
_SAT.oneofs_by_name['_model'].fields.append(
  _SAT.fields_by_name['model'])
_SAT.fields_by_name['model'].containing_oneof = _SAT.oneofs_by_name['_model']
_VERIFYRES.fields_by_name['unknown'].message_type = utils__pb2._STRINGMSG
_VERIFYRES.fields_by_name['err'].message_type = utils__pb2._EMPTY
_VERIFYRES.fields_by_name['proved'].message_type = _PROVED
_VERIFYRES.fields_by_name['refuted'].message_type = _REFUTED
_VERIFYRES.fields_by_name['errors'].message_type = error__pb2._ERROR
_VERIFYRES.fields_by_name['task'].message_type = task__pb2._TASK
_VERIFYRES.oneofs_by_name['res'].fields.append(
  _VERIFYRES.fields_by_name['unknown'])
_VERIFYRES.fields_by_name['unknown'].containing_oneof = _VERIFYRES.oneofs_by_name['res']
_VERIFYRES.oneofs_by_name['res'].fields.append(
  _VERIFYRES.fields_by_name['err'])
_VERIFYRES.fields_by_name['err'].containing_oneof = _VERIFYRES.oneofs_by_name['res']
_VERIFYRES.oneofs_by_name['res'].fields.append(
  _VERIFYRES.fields_by_name['proved'])
_VERIFYRES.fields_by_name['proved'].containing_oneof = _VERIFYRES.oneofs_by_name['res']
_VERIFYRES.oneofs_by_name['res'].fields.append(
  _VERIFYRES.fields_by_name['refuted'])
_VERIFYRES.fields_by_name['refuted'].containing_oneof = _VERIFYRES.oneofs_by_name['res']
_INSTANCERES.fields_by_name['unknown'].message_type = utils__pb2._STRINGMSG
_INSTANCERES.fields_by_name['err'].message_type = utils__pb2._EMPTY
_INSTANCERES.fields_by_name['unsat'].message_type = _UNSAT
_INSTANCERES.fields_by_name['sat'].message_type = _SAT
_INSTANCERES.fields_by_name['errors'].message_type = error__pb2._ERROR
_INSTANCERES.fields_by_name['task'].message_type = task__pb2._TASK
_INSTANCERES.oneofs_by_name['res'].fields.append(
  _INSTANCERES.fields_by_name['unknown'])
_INSTANCERES.fields_by_name['unknown'].containing_oneof = _INSTANCERES.oneofs_by_name['res']
_INSTANCERES.oneofs_by_name['res'].fields.append(
  _INSTANCERES.fields_by_name['err'])
_INSTANCERES.fields_by_name['err'].containing_oneof = _INSTANCERES.oneofs_by_name['res']
_INSTANCERES.oneofs_by_name['res'].fields.append(
  _INSTANCERES.fields_by_name['unsat'])
_INSTANCERES.fields_by_name['unsat'].containing_oneof = _INSTANCERES.oneofs_by_name['res']
_INSTANCERES.oneofs_by_name['res'].fields.append(
  _INSTANCERES.fields_by_name['sat'])
_INSTANCERES.fields_by_name['sat'].containing_oneof = _INSTANCERES.oneofs_by_name['res']
_HINTS_INDUCT_FUNCTIONAL.containing_type = _HINTS_INDUCT
_HINTS_INDUCT_STRUCTURAL.fields_by_name['style'].enum_type = _HINTS_INDUCT_STRUCTURALSTYLE
_HINTS_INDUCT_STRUCTURAL.containing_type = _HINTS_INDUCT
_HINTS_INDUCT.fields_by_name['default'].message_type = utils__pb2._EMPTY
_HINTS_INDUCT.fields_by_name['functional'].message_type = _HINTS_INDUCT_FUNCTIONAL
_HINTS_INDUCT.fields_by_name['structural'].message_type = _HINTS_INDUCT_STRUCTURAL
_HINTS_INDUCT.containing_type = _HINTS
_HINTS_INDUCT_STRUCTURALSTYLE.containing_type = _HINTS_INDUCT
_HINTS_INDUCT.oneofs_by_name['induct'].fields.append(
  _HINTS_INDUCT.fields_by_name['default'])
_HINTS_INDUCT.fields_by_name['default'].containing_oneof = _HINTS_INDUCT.oneofs_by_name['induct']
_HINTS_INDUCT.oneofs_by_name['induct'].fields.append(
  _HINTS_INDUCT.fields_by_name['functional'])
_HINTS_INDUCT.fields_by_name['functional'].containing_oneof = _HINTS_INDUCT.oneofs_by_name['induct']
_HINTS_INDUCT.oneofs_by_name['induct'].fields.append(
  _HINTS_INDUCT.fields_by_name['structural'])
_HINTS_INDUCT.fields_by_name['structural'].containing_oneof = _HINTS_INDUCT.oneofs_by_name['induct']
_HINTS_UNROLL.containing_type = _HINTS
_HINTS_UNROLL.oneofs_by_name['_smt_solver'].fields.append(
  _HINTS_UNROLL.fields_by_name['smt_solver'])
_HINTS_UNROLL.fields_by_name['smt_solver'].containing_oneof = _HINTS_UNROLL.oneofs_by_name['_smt_solver']
_HINTS_UNROLL.oneofs_by_name['_max_steps'].fields.append(
  _HINTS_UNROLL.fields_by_name['max_steps'])
_HINTS_UNROLL.fields_by_name['max_steps'].containing_oneof = _HINTS_UNROLL.oneofs_by_name['_max_steps']
_HINTS.fields_by_name['auto'].message_type = utils__pb2._EMPTY
_HINTS.fields_by_name['unroll'].message_type = _HINTS_UNROLL
_HINTS.fields_by_name['induct'].message_type = _HINTS_INDUCT
_HINTS.oneofs_by_name['method_'].fields.append(
  _HINTS.fields_by_name['auto'])
_HINTS.fields_by_name['auto'].containing_oneof = _HINTS.oneofs_by_name['method_']
_HINTS.oneofs_by_name['method_'].fields.append(
  _HINTS.fields_by_name['unroll'])
_HINTS.fields_by_name['unroll'].containing_oneof = _HINTS.oneofs_by_name['method_']
_HINTS.oneofs_by_name['method_'].fields.append(
  _HINTS.fields_by_name['induct'])
_HINTS.fields_by_name['induct'].containing_oneof = _HINTS.oneofs_by_name['method_']
DESCRIPTOR.message_types_by_name['SessionCreateReq'] = _SESSIONCREATEREQ
DESCRIPTOR.message_types_by_name['DecomposeReq'] = _DECOMPOSEREQ
DESCRIPTOR.message_types_by_name['DecomposeRes'] = _DECOMPOSERES
DESCRIPTOR.message_types_by_name['EvalSrcReq'] = _EVALSRCREQ
DESCRIPTOR.message_types_by_name['EvalRes'] = _EVALRES
DESCRIPTOR.message_types_by_name['VerifySrcReq'] = _VERIFYSRCREQ
DESCRIPTOR.message_types_by_name['VerifyNameReq'] = _VERIFYNAMEREQ
DESCRIPTOR.message_types_by_name['InstanceSrcReq'] = _INSTANCESRCREQ
DESCRIPTOR.message_types_by_name['InstanceNameReq'] = _INSTANCENAMEREQ
DESCRIPTOR.message_types_by_name['Proved'] = _PROVED
DESCRIPTOR.message_types_by_name['Unsat'] = _UNSAT
DESCRIPTOR.message_types_by_name['Model'] = _MODEL
DESCRIPTOR.message_types_by_name['Refuted'] = _REFUTED
DESCRIPTOR.message_types_by_name['Sat'] = _SAT
DESCRIPTOR.message_types_by_name['VerifyRes'] = _VERIFYRES
DESCRIPTOR.message_types_by_name['InstanceRes'] = _INSTANCERES
DESCRIPTOR.message_types_by_name['Hints'] = _HINTS
DESCRIPTOR.enum_types_by_name['ModelType'] = _MODELTYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

SessionCreateReq = _reflection.GeneratedProtocolMessageType('SessionCreateReq', (_message.Message,), {
  'DESCRIPTOR' : _SESSIONCREATEREQ,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.SessionCreateReq)
  })
_sym_db.RegisterMessage(SessionCreateReq)

DecomposeReq = _reflection.GeneratedProtocolMessageType('DecomposeReq', (_message.Message,), {
  'DESCRIPTOR' : _DECOMPOSEREQ,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.DecomposeReq)
  })
_sym_db.RegisterMessage(DecomposeReq)

DecomposeRes = _reflection.GeneratedProtocolMessageType('DecomposeRes', (_message.Message,), {
  'DESCRIPTOR' : _DECOMPOSERES,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.DecomposeRes)
  })
_sym_db.RegisterMessage(DecomposeRes)

EvalSrcReq = _reflection.GeneratedProtocolMessageType('EvalSrcReq', (_message.Message,), {
  'DESCRIPTOR' : _EVALSRCREQ,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.EvalSrcReq)
  })
_sym_db.RegisterMessage(EvalSrcReq)

EvalRes = _reflection.GeneratedProtocolMessageType('EvalRes', (_message.Message,), {
  'DESCRIPTOR' : _EVALRES,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.EvalRes)
  })
_sym_db.RegisterMessage(EvalRes)

VerifySrcReq = _reflection.GeneratedProtocolMessageType('VerifySrcReq', (_message.Message,), {
  'DESCRIPTOR' : _VERIFYSRCREQ,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.VerifySrcReq)
  })
_sym_db.RegisterMessage(VerifySrcReq)

VerifyNameReq = _reflection.GeneratedProtocolMessageType('VerifyNameReq', (_message.Message,), {
  'DESCRIPTOR' : _VERIFYNAMEREQ,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.VerifyNameReq)
  })
_sym_db.RegisterMessage(VerifyNameReq)

InstanceSrcReq = _reflection.GeneratedProtocolMessageType('InstanceSrcReq', (_message.Message,), {
  'DESCRIPTOR' : _INSTANCESRCREQ,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.InstanceSrcReq)
  })
_sym_db.RegisterMessage(InstanceSrcReq)

InstanceNameReq = _reflection.GeneratedProtocolMessageType('InstanceNameReq', (_message.Message,), {
  'DESCRIPTOR' : _INSTANCENAMEREQ,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.InstanceNameReq)
  })
_sym_db.RegisterMessage(InstanceNameReq)

Proved = _reflection.GeneratedProtocolMessageType('Proved', (_message.Message,), {
  'DESCRIPTOR' : _PROVED,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.Proved)
  })
_sym_db.RegisterMessage(Proved)

Unsat = _reflection.GeneratedProtocolMessageType('Unsat', (_message.Message,), {
  'DESCRIPTOR' : _UNSAT,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.Unsat)
  })
_sym_db.RegisterMessage(Unsat)

Model = _reflection.GeneratedProtocolMessageType('Model', (_message.Message,), {
  'DESCRIPTOR' : _MODEL,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.Model)
  })
_sym_db.RegisterMessage(Model)

Refuted = _reflection.GeneratedProtocolMessageType('Refuted', (_message.Message,), {
  'DESCRIPTOR' : _REFUTED,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.Refuted)
  })
_sym_db.RegisterMessage(Refuted)

Sat = _reflection.GeneratedProtocolMessageType('Sat', (_message.Message,), {
  'DESCRIPTOR' : _SAT,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.Sat)
  })
_sym_db.RegisterMessage(Sat)

VerifyRes = _reflection.GeneratedProtocolMessageType('VerifyRes', (_message.Message,), {
  'DESCRIPTOR' : _VERIFYRES,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.VerifyRes)
  })
_sym_db.RegisterMessage(VerifyRes)

InstanceRes = _reflection.GeneratedProtocolMessageType('InstanceRes', (_message.Message,), {
  'DESCRIPTOR' : _INSTANCERES,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.InstanceRes)
  })
_sym_db.RegisterMessage(InstanceRes)

Hints = _reflection.GeneratedProtocolMessageType('Hints', (_message.Message,), {

  'Induct' : _reflection.GeneratedProtocolMessageType('Induct', (_message.Message,), {

    'Functional' : _reflection.GeneratedProtocolMessageType('Functional', (_message.Message,), {
      'DESCRIPTOR' : _HINTS_INDUCT_FUNCTIONAL,
      '__module__' : 'simple_api_pb2'
      # @@protoc_insertion_point(class_scope:imandrax.simple.Hints.Induct.Functional)
      })
    ,

    'Structural' : _reflection.GeneratedProtocolMessageType('Structural', (_message.Message,), {
      'DESCRIPTOR' : _HINTS_INDUCT_STRUCTURAL,
      '__module__' : 'simple_api_pb2'
      # @@protoc_insertion_point(class_scope:imandrax.simple.Hints.Induct.Structural)
      })
    ,
    'DESCRIPTOR' : _HINTS_INDUCT,
    '__module__' : 'simple_api_pb2'
    # @@protoc_insertion_point(class_scope:imandrax.simple.Hints.Induct)
    })
  ,

  'Unroll' : _reflection.GeneratedProtocolMessageType('Unroll', (_message.Message,), {
    'DESCRIPTOR' : _HINTS_UNROLL,
    '__module__' : 'simple_api_pb2'
    # @@protoc_insertion_point(class_scope:imandrax.simple.Hints.Unroll)
    })
  ,
  'DESCRIPTOR' : _HINTS,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.Hints)
  })
_sym_db.RegisterMessage(Hints)
_sym_db.RegisterMessage(Hints.Induct)
_sym_db.RegisterMessage(Hints.Induct.Functional)
_sym_db.RegisterMessage(Hints.Induct.Structural)
_sym_db.RegisterMessage(Hints.Unroll)



_SIMPLE = _descriptor.ServiceDescriptor(
  name='Simple',
  full_name='imandrax.simple.Simple',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=2472,
  serialized_end=3068,
  methods=[
  _descriptor.MethodDescriptor(
    name='status',
    full_name='imandrax.simple.Simple.status',
    index=0,
    containing_service=None,
    input_type=utils__pb2._EMPTY,
    output_type=utils__pb2._STRINGMSG,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='shutdown',
    full_name='imandrax.simple.Simple.shutdown',
    index=1,
    containing_service=None,
    input_type=utils__pb2._EMPTY,
    output_type=utils__pb2._EMPTY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='decompose',
    full_name='imandrax.simple.Simple.decompose',
    index=2,
    containing_service=None,
    input_type=_DECOMPOSEREQ,
    output_type=_DECOMPOSERES,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='create_session',
    full_name='imandrax.simple.Simple.create_session',
    index=3,
    containing_service=None,
    input_type=_SESSIONCREATEREQ,
    output_type=session__pb2._SESSION,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='eval_src',
    full_name='imandrax.simple.Simple.eval_src',
    index=4,
    containing_service=None,
    input_type=_EVALSRCREQ,
    output_type=_EVALRES,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='verify_src',
    full_name='imandrax.simple.Simple.verify_src',
    index=5,
    containing_service=None,
    input_type=_VERIFYSRCREQ,
    output_type=_VERIFYRES,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='verify_name',
    full_name='imandrax.simple.Simple.verify_name',
    index=6,
    containing_service=None,
    input_type=_VERIFYNAMEREQ,
    output_type=_VERIFYRES,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='instance_src',
    full_name='imandrax.simple.Simple.instance_src',
    index=7,
    containing_service=None,
    input_type=_INSTANCESRCREQ,
    output_type=_INSTANCERES,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='instance_name',
    full_name='imandrax.simple.Simple.instance_name',
    index=8,
    containing_service=None,
    input_type=_INSTANCENAMEREQ,
    output_type=_INSTANCERES,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_SIMPLE)

DESCRIPTOR.services_by_name['Simple'] = _SIMPLE

# @@protoc_insertion_point(module_scope)
