# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: simple_api.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import error_pb2 as error__pb2
import utils_pb2 as utils__pb2
import session_pb2 as session__pb2
import artmsg_pb2 as artmsg__pb2
import task_pb2 as task__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x10simple_api.proto\x12\x0fimandrax.simple\x1a\x0b\x65rror.proto\x1a\x0butils.proto\x1a\rsession.proto\x1a\x0c\x61rtmsg.proto\x1a\ntask.proto\"\'\n\x10SessionCreateReq\x12\x13\n\x0b\x61pi_version\x18\x01 \x01(\t\"\xbf\x02\n\x0c\x44\x65\x63omposeReq\x12*\n\x07session\x18\x01 \x01(\x0b\x32\x19.imandrax.session.Session\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x15\n\x08\x61ssuming\x18\x03 \x01(\tH\x00\x88\x01\x01\x12\r\n\x05\x62\x61sis\x18\x04 \x03(\t\x12\x12\n\nrule_specs\x18\x05 \x03(\t\x12\r\n\x05prune\x18\x06 \x01(\x08\x12\x15\n\x08\x63tx_simp\x18\x07 \x01(\x08H\x01\x88\x01\x01\x12\x31\n\tlift_bool\x18\x08 \x01(\x0e\x32\x19.imandrax.simple.LiftBoolH\x02\x88\x01\x01\x12\x10\n\x03str\x18\t \x01(\x08H\x03\x88\x01\x01\x12\x14\n\x07timeout\x18\n \x01(\x05H\x04\x88\x01\x01\x42\x0b\n\t_assumingB\x0b\n\t_ctx_simpB\x0c\n\n_lift_boolB\x06\n\x04_strB\n\n\x08_timeout\"s\n\x0c\x44\x65\x63omposeRes\x12\x18\n\x08\x61rtifact\x18\x01 \x01(\x0b\x32\x04.ArtH\x00\x12\x15\n\x03\x65rr\x18\x02 \x01(\x0b\x32\x06.EmptyH\x00\x12\x16\n\x06\x65rrors\x18\n \x03(\x0b\x32\x06.Error\x12\x13\n\x04task\x18\x0b \x01(\x0b\x32\x05.TaskB\x05\n\x03res\"E\n\nEvalSrcReq\x12*\n\x07session\x18\x01 \x01(\x0b\x32\x19.imandrax.session.Session\x12\x0b\n\x03src\x18\x02 \x01(\t\"Z\n\x07\x45valRes\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x10\n\x08messages\x18\x02 \x03(\t\x12\x16\n\x06\x65rrors\x18\x03 \x03(\x0b\x32\x06.Error\x12\x14\n\x05tasks\x18\x04 \x03(\x0b\x32\x05.Task\"e\n\x0cVerifySrcReq\x12*\n\x07session\x18\x01 \x01(\x0b\x32\x19.imandrax.session.Session\x12\x0b\n\x03src\x18\x02 \x01(\t\x12\x12\n\x05hints\x18\n \x01(\tH\x00\x88\x01\x01\x42\x08\n\x06_hints\"g\n\rVerifyNameReq\x12*\n\x07session\x18\x01 \x01(\x0b\x32\x19.imandrax.session.Session\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x12\n\x05hints\x18\n \x01(\tH\x00\x88\x01\x01\x42\x08\n\x06_hints\"g\n\x0eInstanceSrcReq\x12*\n\x07session\x18\x01 \x01(\x0b\x32\x19.imandrax.session.Session\x12\x0b\n\x03src\x18\x02 \x01(\t\x12\x12\n\x05hints\x18\n \x01(\tH\x00\x88\x01\x01\x42\x08\n\x06_hints\"i\n\x0fInstanceNameReq\x12*\n\x07session\x18\x01 \x01(\x0b\x32\x19.imandrax.session.Session\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x12\n\x05hints\x18\n \x01(\tH\x00\x88\x01\x01\x42\x08\n\x06_hints\",\n\x06Proved\x12\x15\n\x08proof_pp\x18\x01 \x01(\tH\x00\x88\x01\x01\x42\x0b\n\t_proof_pp\")\n\rVerified_upto\x12\x10\n\x03msg\x18\x01 \x01(\tH\x00\x88\x01\x01\x42\x06\n\x04_msg\"+\n\x05Unsat\x12\x15\n\x08proof_pp\x18\x01 \x01(\tH\x00\x88\x01\x01\x42\x0b\n\t_proof_pp\"j\n\x05Model\x12*\n\x06m_type\x18\x01 \x01(\x0e\x32\x1a.imandrax.simple.ModelType\x12\x0b\n\x03src\x18\x02 \x01(\t\x12\x1b\n\x08\x61rtifact\x18\x03 \x01(\x0b\x32\x04.ArtH\x00\x88\x01\x01\x42\x0b\n\t_artifact\"?\n\x07Refuted\x12*\n\x05model\x18\x01 \x01(\x0b\x32\x16.imandrax.simple.ModelH\x00\x88\x01\x01\x42\x08\n\x06_model\";\n\x03Sat\x12*\n\x05model\x18\x01 \x01(\x0b\x32\x16.imandrax.simple.ModelH\x00\x88\x01\x01\x42\x08\n\x06_model\"\x86\x02\n\tVerifyRes\x12\x1d\n\x07unknown\x18\x01 \x01(\x0b\x32\n.StringMsgH\x00\x12\x15\n\x03\x65rr\x18\x02 \x01(\x0b\x32\x06.EmptyH\x00\x12)\n\x06proved\x18\x03 \x01(\x0b\x32\x17.imandrax.simple.ProvedH\x00\x12+\n\x07refuted\x18\x04 \x01(\x0b\x32\x18.imandrax.simple.RefutedH\x00\x12\x37\n\rverified_upto\x18\x05 \x01(\x0b\x32\x1e.imandrax.simple.Verified_uptoH\x00\x12\x16\n\x06\x65rrors\x18\n \x03(\x0b\x32\x06.Error\x12\x13\n\x04task\x18\x0b \x01(\x0b\x32\x05.TaskB\x05\n\x03res\"\xc5\x01\n\x0bInstanceRes\x12\x1d\n\x07unknown\x18\x01 \x01(\x0b\x32\n.StringMsgH\x00\x12\x15\n\x03\x65rr\x18\x02 \x01(\x0b\x32\x06.EmptyH\x00\x12\'\n\x05unsat\x18\x03 \x01(\x0b\x32\x16.imandrax.simple.UnsatH\x00\x12#\n\x03sat\x18\x04 \x01(\x0b\x32\x14.imandrax.simple.SatH\x00\x12\x16\n\x06\x65rrors\x18\n \x03(\x0b\x32\x06.Error\x12\x13\n\x04task\x18\x0b \x01(\x0b\x32\x05.TaskB\x05\n\x03res\"G\n\x0cTypecheckReq\x12*\n\x07session\x18\x01 \x01(\x0b\x32\x19.imandrax.session.Session\x12\x0b\n\x03src\x18\x02 \x01(\t\"F\n\x0cTypecheckRes\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\r\n\x05types\x18\x02 \x01(\t\x12\x16\n\x06\x65rrors\x18\x03 \x03(\x0b\x32\x06.Error*F\n\x08LiftBool\x12\x0b\n\x07\x44\x65\x66\x61ult\x10\x00\x12\x14\n\x10NestedEqualities\x10\x01\x12\x0e\n\nEqualities\x10\x02\x12\x07\n\x03\x41ll\x10\x03*.\n\tModelType\x12\x13\n\x0f\x43ounter_example\x10\x00\x12\x0c\n\x08Instance\x10\x01\x32\xd1\x05\n\x06Simple\x12\x1c\n\x06status\x12\x06.Empty\x1a\n.StringMsg\x12\x1a\n\x08shutdown\x12\x06.Empty\x1a\x06.Empty\x12N\n\x0e\x63reate_session\x12!.imandrax.simple.SessionCreateReq\x1a\x19.imandrax.session.Session\x12\x30\n\x0b\x65nd_session\x12\x19.imandrax.session.Session\x1a\x06.Empty\x12\x41\n\x08\x65val_src\x12\x1b.imandrax.simple.EvalSrcReq\x1a\x18.imandrax.simple.EvalRes\x12G\n\nverify_src\x12\x1d.imandrax.simple.VerifySrcReq\x1a\x1a.imandrax.simple.VerifyRes\x12I\n\x0bverify_name\x12\x1e.imandrax.simple.VerifyNameReq\x1a\x1a.imandrax.simple.VerifyRes\x12M\n\x0cinstance_src\x12\x1f.imandrax.simple.InstanceSrcReq\x1a\x1c.imandrax.simple.InstanceRes\x12O\n\rinstance_name\x12 .imandrax.simple.InstanceNameReq\x1a\x1c.imandrax.simple.InstanceRes\x12I\n\tdecompose\x12\x1d.imandrax.simple.DecomposeReq\x1a\x1d.imandrax.simple.DecomposeRes\x12I\n\ttypecheck\x12\x1d.imandrax.simple.TypecheckReq\x1a\x1d.imandrax.simple.TypecheckResb\x06proto3')

_LIFTBOOL = DESCRIPTOR.enum_types_by_name['LiftBool']
LiftBool = enum_type_wrapper.EnumTypeWrapper(_LIFTBOOL)
_MODELTYPE = DESCRIPTOR.enum_types_by_name['ModelType']
ModelType = enum_type_wrapper.EnumTypeWrapper(_MODELTYPE)
Default = 0
NestedEqualities = 1
Equalities = 2
All = 3
Counter_example = 0
Instance = 1


_SESSIONCREATEREQ = DESCRIPTOR.message_types_by_name['SessionCreateReq']
_DECOMPOSEREQ = DESCRIPTOR.message_types_by_name['DecomposeReq']
_DECOMPOSERES = DESCRIPTOR.message_types_by_name['DecomposeRes']
_EVALSRCREQ = DESCRIPTOR.message_types_by_name['EvalSrcReq']
_EVALRES = DESCRIPTOR.message_types_by_name['EvalRes']
_VERIFYSRCREQ = DESCRIPTOR.message_types_by_name['VerifySrcReq']
_VERIFYNAMEREQ = DESCRIPTOR.message_types_by_name['VerifyNameReq']
_INSTANCESRCREQ = DESCRIPTOR.message_types_by_name['InstanceSrcReq']
_INSTANCENAMEREQ = DESCRIPTOR.message_types_by_name['InstanceNameReq']
_PROVED = DESCRIPTOR.message_types_by_name['Proved']
_VERIFIED_UPTO = DESCRIPTOR.message_types_by_name['Verified_upto']
_UNSAT = DESCRIPTOR.message_types_by_name['Unsat']
_MODEL = DESCRIPTOR.message_types_by_name['Model']
_REFUTED = DESCRIPTOR.message_types_by_name['Refuted']
_SAT = DESCRIPTOR.message_types_by_name['Sat']
_VERIFYRES = DESCRIPTOR.message_types_by_name['VerifyRes']
_INSTANCERES = DESCRIPTOR.message_types_by_name['InstanceRes']
_TYPECHECKREQ = DESCRIPTOR.message_types_by_name['TypecheckReq']
_TYPECHECKRES = DESCRIPTOR.message_types_by_name['TypecheckRes']
SessionCreateReq = _reflection.GeneratedProtocolMessageType('SessionCreateReq', (_message.Message,), {
  'DESCRIPTOR' : _SESSIONCREATEREQ,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.SessionCreateReq)
  })
_sym_db.RegisterMessage(SessionCreateReq)

DecomposeReq = _reflection.GeneratedProtocolMessageType('DecomposeReq', (_message.Message,), {
  'DESCRIPTOR' : _DECOMPOSEREQ,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.DecomposeReq)
  })
_sym_db.RegisterMessage(DecomposeReq)

DecomposeRes = _reflection.GeneratedProtocolMessageType('DecomposeRes', (_message.Message,), {
  'DESCRIPTOR' : _DECOMPOSERES,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.DecomposeRes)
  })
_sym_db.RegisterMessage(DecomposeRes)

EvalSrcReq = _reflection.GeneratedProtocolMessageType('EvalSrcReq', (_message.Message,), {
  'DESCRIPTOR' : _EVALSRCREQ,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.EvalSrcReq)
  })
_sym_db.RegisterMessage(EvalSrcReq)

EvalRes = _reflection.GeneratedProtocolMessageType('EvalRes', (_message.Message,), {
  'DESCRIPTOR' : _EVALRES,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.EvalRes)
  })
_sym_db.RegisterMessage(EvalRes)

VerifySrcReq = _reflection.GeneratedProtocolMessageType('VerifySrcReq', (_message.Message,), {
  'DESCRIPTOR' : _VERIFYSRCREQ,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.VerifySrcReq)
  })
_sym_db.RegisterMessage(VerifySrcReq)

VerifyNameReq = _reflection.GeneratedProtocolMessageType('VerifyNameReq', (_message.Message,), {
  'DESCRIPTOR' : _VERIFYNAMEREQ,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.VerifyNameReq)
  })
_sym_db.RegisterMessage(VerifyNameReq)

InstanceSrcReq = _reflection.GeneratedProtocolMessageType('InstanceSrcReq', (_message.Message,), {
  'DESCRIPTOR' : _INSTANCESRCREQ,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.InstanceSrcReq)
  })
_sym_db.RegisterMessage(InstanceSrcReq)

InstanceNameReq = _reflection.GeneratedProtocolMessageType('InstanceNameReq', (_message.Message,), {
  'DESCRIPTOR' : _INSTANCENAMEREQ,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.InstanceNameReq)
  })
_sym_db.RegisterMessage(InstanceNameReq)

Proved = _reflection.GeneratedProtocolMessageType('Proved', (_message.Message,), {
  'DESCRIPTOR' : _PROVED,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.Proved)
  })
_sym_db.RegisterMessage(Proved)

Verified_upto = _reflection.GeneratedProtocolMessageType('Verified_upto', (_message.Message,), {
  'DESCRIPTOR' : _VERIFIED_UPTO,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.Verified_upto)
  })
_sym_db.RegisterMessage(Verified_upto)

Unsat = _reflection.GeneratedProtocolMessageType('Unsat', (_message.Message,), {
  'DESCRIPTOR' : _UNSAT,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.Unsat)
  })
_sym_db.RegisterMessage(Unsat)

Model = _reflection.GeneratedProtocolMessageType('Model', (_message.Message,), {
  'DESCRIPTOR' : _MODEL,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.Model)
  })
_sym_db.RegisterMessage(Model)

Refuted = _reflection.GeneratedProtocolMessageType('Refuted', (_message.Message,), {
  'DESCRIPTOR' : _REFUTED,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.Refuted)
  })
_sym_db.RegisterMessage(Refuted)

Sat = _reflection.GeneratedProtocolMessageType('Sat', (_message.Message,), {
  'DESCRIPTOR' : _SAT,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.Sat)
  })
_sym_db.RegisterMessage(Sat)

VerifyRes = _reflection.GeneratedProtocolMessageType('VerifyRes', (_message.Message,), {
  'DESCRIPTOR' : _VERIFYRES,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.VerifyRes)
  })
_sym_db.RegisterMessage(VerifyRes)

InstanceRes = _reflection.GeneratedProtocolMessageType('InstanceRes', (_message.Message,), {
  'DESCRIPTOR' : _INSTANCERES,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.InstanceRes)
  })
_sym_db.RegisterMessage(InstanceRes)

TypecheckReq = _reflection.GeneratedProtocolMessageType('TypecheckReq', (_message.Message,), {
  'DESCRIPTOR' : _TYPECHECKREQ,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.TypecheckReq)
  })
_sym_db.RegisterMessage(TypecheckReq)

TypecheckRes = _reflection.GeneratedProtocolMessageType('TypecheckRes', (_message.Message,), {
  'DESCRIPTOR' : _TYPECHECKRES,
  '__module__' : 'simple_api_pb2'
  # @@protoc_insertion_point(class_scope:imandrax.simple.TypecheckRes)
  })
_sym_db.RegisterMessage(TypecheckRes)

_SIMPLE = DESCRIPTOR.services_by_name['Simple']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _LIFTBOOL._serialized_start=2145
  _LIFTBOOL._serialized_end=2215
  _MODELTYPE._serialized_start=2217
  _MODELTYPE._serialized_end=2263
  _SESSIONCREATEREQ._serialized_start=104
  _SESSIONCREATEREQ._serialized_end=143
  _DECOMPOSEREQ._serialized_start=146
  _DECOMPOSEREQ._serialized_end=465
  _DECOMPOSERES._serialized_start=467
  _DECOMPOSERES._serialized_end=582
  _EVALSRCREQ._serialized_start=584
  _EVALSRCREQ._serialized_end=653
  _EVALRES._serialized_start=655
  _EVALRES._serialized_end=745
  _VERIFYSRCREQ._serialized_start=747
  _VERIFYSRCREQ._serialized_end=848
  _VERIFYNAMEREQ._serialized_start=850
  _VERIFYNAMEREQ._serialized_end=953
  _INSTANCESRCREQ._serialized_start=955
  _INSTANCESRCREQ._serialized_end=1058
  _INSTANCENAMEREQ._serialized_start=1060
  _INSTANCENAMEREQ._serialized_end=1165
  _PROVED._serialized_start=1167
  _PROVED._serialized_end=1211
  _VERIFIED_UPTO._serialized_start=1213
  _VERIFIED_UPTO._serialized_end=1254
  _UNSAT._serialized_start=1256
  _UNSAT._serialized_end=1299
  _MODEL._serialized_start=1301
  _MODEL._serialized_end=1407
  _REFUTED._serialized_start=1409
  _REFUTED._serialized_end=1472
  _SAT._serialized_start=1474
  _SAT._serialized_end=1533
  _VERIFYRES._serialized_start=1536
  _VERIFYRES._serialized_end=1798
  _INSTANCERES._serialized_start=1801
  _INSTANCERES._serialized_end=1998
  _TYPECHECKREQ._serialized_start=2000
  _TYPECHECKREQ._serialized_end=2071
  _TYPECHECKRES._serialized_start=2073
  _TYPECHECKRES._serialized_end=2143
  _SIMPLE._serialized_start=2266
  _SIMPLE._serialized_end=2987
# @@protoc_insertion_point(module_scope)
