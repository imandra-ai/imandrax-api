#!/bin/sh
# (c) Copyright Imandra Inc., 2024-2025.

set -eu

# see: .github/workflows/main.yml in imandrax to see what the names are
BUCKET_NAME="imandra-prod-imandrax-releases"
BUCKET_URL="https://storage.googleapis.com/${BUCKET_NAME}"

set +u
if [ "${INSTALL_PREFIX}" = "" ]; then
  INSTALL_PREFIX="${HOME}/.local"
fi
if [ "${VERSION}" = "" ]; then
  VERSION="latest"
fi

set -u

install_linux() {
  ARCHIVE="${BUCKET_URL}/imandrax-linux-x86_64-${VERSION}.tar.gz"

  echo "installing in '${INSTALL_PREFIX}/bin/' â€¦"

  BIN_DIR="${INSTALL_PREFIX}/bin"
  TMP_FILE="${TMPDIR:-/tmp}/imandrax-linux-x86_64.tar.gz"

  mkdir -p "${BIN_DIR}"

  echo "downloading from ${ARCHIVE}"
  wget "${ARCHIVE}" -O "${TMP_FILE}"
  echo "downloaded to ${TMP_FILE}"
  cd "${TMPDIR:-/tmp}"
  tar xvf "${TMP_FILE}"
  echo "using sudo to copy files"
  sudo install -t "${BIN_DIR}/" "${TMPDIR:-/tmp}/imandrax-cli"
  sudo install -t "${BIN_DIR}/" "${TMPDIR:-/tmp}/imandrax-ws-client"
  sudo install -t "${BIN_DIR}/" "${TMPDIR:-/tmp}/tldrs"
}

_install_macos_check_files_present() {
  INSTALL_PREFIX=$1

  if [ ! -x "${INSTALL_PREFIX}/bin/imandrax-cli" ] || \
      [ ! -x "${INSTALL_PREFIX}/bin/imandrax-ws-client" ] || \
      [ ! -x "${INSTALL_PREFIX}/bin/tldrs" ]; then
    echo "Some files failed to install, aborting."
    exit 1
  fi
}

_install_macos_add_to_profile() {
  BIN_DIR=$1
  PROFILE_NAME=$2
  PROFILE_FILE="${HOME}/${PROFILE_NAME}"

  LINE="export PATH=\"${BIN_DIR}:\$PATH\""

  touch "${PROFILE_FILE}"

  if grep -qxF "${LINE}" "${PROFILE_FILE}";then
    echo "${BIN_DIR} was already present in ${PROFILE_NAME}"
  else
    status=$? 
    if [ "${status}" -ne 1 ];then
      exit "${status}"
    fi
    DATE_STRING="$(date '+%Y-%m-%d')"
    printf "\n# Added by ImandraX installer on %s\n%s\n" \
      "${DATE_STRING}" "${LINE}" >> "${PROFILE_FILE}"

    # just do the same check again!
    if grep -qxF "${LINE}" "${PROFILE_FILE}"; then
      echo "Added install dir to PATH in ${PROFILE_FILE}"
    else
      status=$? 
      if [ "${status}" -ne 1 ];then
        exit "${status}"
      fi
      echo "Updatng PATH via ${PROFILE_NAME} failed!"
    fi
  fi
}

_install_macos_prompt_to_update_path() {
  INSTALL_PREFIX=$1

  BIN_DIR="${INSTALL_PREFIX}/bin"

  answer_zprofile=
  answer_profile=

  if [ -w  "${HOME}" ]; then
    if [ ! -e "${HOME}/.zprofile" ] || [ -w "${HOME}/.zprofile" ];then
      printf "Add %s to PATH via .zprofile (Y/n)? " "${BIN_DIR}"
      read -r answer_zprofile
      if [ "${answer_zprofile}" != "${answer_zprofile#[Nn]}" ];then
        echo 'Not updating .zprofile'
      else
        _install_macos_add_to_profile "${BIN_DIR}" ".zprofile"
      fi
    fi

    if [ ! -e "${HOME}/.profile" ] || [ -w "${HOME}/.profile" ];then
      printf "Add %s to PATH via .profile (Y/n)? " "${BIN_DIR}"
      read -r answer_profile
      if [ "${answer_profile}" != "${answer_profile#[Nn]}" ];then
        echo 'Not updating .profile'
      else
        _install_macos_add_to_profile "${BIN_DIR}" ".profile"
      fi
    fi

    if [ "${answer_profile}" != "${answer_profile#[Nn]}" ] && \
          [ "${answer_zprofile}" != "${answer_zprofile#[Nn]}" ];then
        echo "You might want to add ${BIN_DIR}/bin to your PATH."
    fi
    echo ''
  fi
}

_install_macos_extract_files() {
  TMP_DIR=$1
  TMP_FILE=$2
  INSTALL_PREFIX=$3

  cd "${TMP_DIR}"
  bsdtar xzf "${TMP_FILE}"
  echo "Extracted outer tarball in-place"
  if ! [ -d "${INSTALL_PREFIX}" ];then 
    echo "Creating ${INSTALL_PREFIX}"
    mkdir -p "${INSTALL_PREFIX}"
  fi
  echo "Created dir ${INSTALL_PREFIX}"
  bsdtar -xzf Payload -C "${INSTALL_PREFIX}" opt
  bsdtar -xzf Payload -C "${INSTALL_PREFIX}" --strip-components=3 usr/local/bin
  echo "Extracted inner tarball to ${INSTALL_PREFIX}"
  echo ''
}

_install_macos_download_files() {
  ARCHIVE=$1
  TMP_FILE=$2

  echo "Downloading ${ARCHIVE}"
  curl -s "${ARCHIVE}" -o "${TMP_FILE}"
  echo "Downloaded at ${TMP_FILE}"
}

install_macos() {
  BUCKET_URL=$1
  VERSION=$2
  INSTALL_PREFIX=$3

  FILENAME="imandrax-macos-aarch64-${VERSION}.pkg"
  ARCHIVE="${BUCKET_URL}/${FILENAME}"
  TMP_DIR="${TMPDIR:-/tmp}"
  TMP_FILE="${TMP_DIR}${FILENAME}"

  _install_macos_download_files "${ARCHIVE}" "${TMP_FILE}"
  _install_macos_extract_files "${TMP_DIR}" "${TMP_FILE}" "${INSTALL_PREFIX}"

  # modify executable to find libs
  sed -i'.backup' "s#DIR=/opt/imandrax#DIR=${INSTALL_PREFIX}/opt/imandrax#" \
    "${INSTALL_PREFIX}/bin/imandrax-cli"
  
  # clean up temp files
  rm -rf "${INSTALL_PREFIX}/bin/imandrax-cli.backup"

  _install_macos_check_files_present "${INSTALL_PREFIX}"
  _install_macos_prompt_to_update_path "${INSTALL_PREFIX}"

  echo "Installed ImandraX! Next:"
  echo " * Go to https://universe.imandra.ai"
  echo " * Try creating an API key to get started"

  echo 'See the docs for more info: '
  echo 'https://github.com/imandra-ai/imandrax-api?tab=readme-ov-file#getting-an-imandra-universe-api-key'
}

cat << EOF

.___                           .___             ____  ___
|   | _____ _____    ____    __| _/___________  \   \/  /
|   |/     \\\__  \  /    \  / __ |\_  __ \__  \  \     /
|   |  Y Y  \/ __ \|   |  \/ /_/ | |  | \// __ \_/     \ 
|___|__|_|  (____  /___|  /\____ | |__|  (____  /___/\  \ 
          \/     \/     \/      \/            \/      \_/

EOF

# detect OS
case "$(uname -s)" in
  Linux*)
    install_linux
    ;;
  Darwin*)
    install_macos "${BUCKET_URL}" "${VERSION}" "${INSTALL_PREFIX}"
    ;;
  *)
    echo "unsupported OS"; exit 1
esac
