#!/bin/sh
# (c) Copyright Imandra Inc., 2024-2025.

set -eu

# see: .github/workflows/main.yml in imandrax to see what the names are
BUCKET_NAME="imandra-prod-imandrax-releases"
BUCKET_URL="https://storage.googleapis.com/${BUCKET_NAME}"

set +u
if [ "${INSTALL_PREFIX}" = "" ]; then
  INSTALL_PREFIX="${HOME}/.local"
fi
if [ "${VERSION}" = "" ]; then
  VERSION="latest"
fi

set -u

install_linux() {
  ARCHIVE="${BUCKET_URL}/imandrax-linux-x86_64-${VERSION}.tar.gz"

  echo "installing in '${INSTALL_PREFIX}/bin/' â€¦"

  BIN_DIR="${INSTALL_PREFIX}/bin"
  TMP_FILE="${TMPDIR:-/tmp}/imandrax-linux-x86_64.tar.gz"

  mkdir -p "${BIN_DIR}"

  echo "downloading from ${ARCHIVE}"
  wget "${ARCHIVE}" -O "${TMP_FILE}"
  echo "downloaded to ${TMP_FILE}"
  cd "${TMPDIR:-/tmp}"
  tar xvf "${TMP_FILE}"
  echo "using sudo to copy files"
  sudo install -t "${BIN_DIR}/" "${TMPDIR:-/tmp}/imandrax-cli"
  sudo install -t "${BIN_DIR}/" "${TMPDIR:-/tmp}/imandrax-ws-client"
  sudo install -t "${BIN_DIR}/" "${TMPDIR:-/tmp}/tldrs"
}

_install_macos_check_files_present() {
  INSTALL_PREFIX=$1

  if [ ! -x "${INSTALL_PREFIX}/bin/imandrax-cli" ] || \
      [ ! -x "${INSTALL_PREFIX}/bin/imandrax-ws-client" ] || \
      [ ! -x "${INSTALL_PREFIX}/bin/tldrs" ]; then
    echo "Some files failed to install, aborting."
    exit 1
  fi
}

_install_macos_add_to_profile() {
  INSTALL_PREFIX=$1
  PROFILE=$2
  PROFILE_PATH="${HOME}/${PROFILE}"

  BIN_DIR="${INSTALL_PREFIX}/bin"
  LINE="export PATH=\"${BIN_DIR}:\$PATH\""

  touch "${PROFILE}"

  if ! grep -qxF "${LINE}" "${PROFILE_PATH}"; then
    DATE_STRING="$(date '+%Y-%m-%d')"
    printf "\n# Added by ImandraX installer on %s\n%s\n" \
      "${DATE_STRING}" "${LINE}" >> "${PROFILE_PATH}"
    # just do the same check again!
    if ! grep -qxF "${LINE}" "${PROFILE_PATH}"; then
      echo "Updatng PATH via ${PROFILE} failed!"
    else
      echo "added install dir to PATH in ${PROFILE_PATH}"
    fi
  else
    echo "ImandraX was already present in ${PROFILE}"
  fi
}

install_macos() {
  BUCKET_URL=$1
  VERSION=$2
  INSTALL_PREFIX=$3

  FILENAME="imandrax-macos-aarch64-${VERSION}.pkg"
  ARCHIVE="${BUCKET_URL}/${FILENAME}"
  TMP_DIR="${TMPDIR:-/tmp}"
  TMP_FILE="${TMP_DIR}${FILENAME}"

  echo "downloading from ${ARCHIVE}"
  curl -s "${ARCHIVE}" -o "${TMP_FILE}"
  echo "downloaded installer at ${TMP_FILE}"
  cd "${TMP_DIR}"
  bsdtar xzf "${TMP_FILE}"
  echo "extracted to temp dir"
  mkdir -p "${INSTALL_PREFIX}"
  echo "created dir ${INSTALL_PREFIX}"
  bsdtar -xzf Payload -C "${INSTALL_PREFIX}" opt
  bsdtar -xzf Payload -C "${INSTALL_PREFIX}" --strip-components=3 usr/local/bin
  echo "extracted and copied files to install dir"
  sed -i'.backup' "s#DIR=/opt/imandrax#DIR=${INSTALL_PREFIX}/opt/imandrax#" \
    "${INSTALL_PREFIX}/bin/imandrax-cli"
  rm -rf "${INSTALL_PREFIX}/bin/imandrax-cli.backup"

  printf 'Add ImandraX to PATH via .zprofile (Y/n)? '
  read -r answer_zprofile
  if [ "${answer_zprofile}" != "${answer_zprofile#[Nn]}" ];then
    echo 'Not updating .zprofile'
  else
    _install_macos_add_to_profile "${INSTALL_PREFIX}" ".zprofile"
  fi

  printf 'Add ImandraX to PATH via .profile (Y/n)? '
  read -r answer_profile
  if [ "${answer_profile}" != "${answer_profile#[Nn]}" ];then
    echo 'Not updating .profile'
  else
    _install_macos_add_to_profile "${INSTALL_PREFIX}" ".profile"
  fi

  _install_macos_check_files_present "${INSTALL_PREFIX}"
  

  echo 'Installed ImandraX'

  if [ "${answer_profile}" != "${answer_profile#[Nn]}" ] && \
      [ "${answer_zprofile}" != "${answer_zprofile#[Nn]}" ];then
    echo "You might want to add ${INSTALL_PREFIX}/bin to your PATH."
  fi

  echo 'Now go to https://universe.imandra.ai and try creating an API key to get started.'
  echo 'See the docs for more info: https://github.com/imandra-ai/imandrax-api?tab=readme-ov-file#getting-an-imandra-universe-api-key'
}

cat << EOF

.___                           .___             ____  ___
|   | _____ _____    ____    __| _/___________  \   \/  /
|   |/     \\\__  \  /    \  / __ |\_  __ \__  \  \     /
|   |  Y Y  \/ __ \|   |  \/ /_/ | |  | \// __ \_/     \ 
|___|__|_|  (____  /___|  /\____ | |__|  (____  /___/\  \ 
          \/     \/     \/      \/            \/      \_/

EOF

# detect OS
case "$(uname -s)" in
  Linux*)
    install_linux
    ;;
  Darwin*)
    install_macos "${BUCKET_URL}" "${VERSION}" "${INSTALL_PREFIX}"
    ;;
  *)
    echo "unsupported OS"; exit 1
esac
